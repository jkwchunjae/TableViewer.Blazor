@inherits TvViewBase

@if (Data != null)
{
    #region style
    List<string> rootClassList = new()
    {
        "d-inline-block",
    };
    rootClassList.AddRange(Options.Style.RootClass);
    var titleStyleText = "display: flex; justify-content: space-between; align-items: center;";
    #endregion
    #region content
    <MudPaper Elevation="0" Class="@(string.Join(" ", rootClassList))">
    <div style="@titleStyleText">
        @if (!string.IsNullOrWhiteSpace(Options.Title))
        {
            <span class="tv-title">
                @Options.Title
            </span>
        }
        @if (Options.TitleButtons.Any())
        {
            <MudPaper Elevation="0" Class="d-flex gap-1">
                @foreach (var button in Options.TitleButtons)
                {
                    <TvButton Item="@Data" Button="button" />
                }
            </MudPaper>
        }
    </div>
    @if (!string.IsNullOrWhiteSpace(Options.Title) || Options.TitleButtons.Any())
    {
        <MudDivider Class="my-3" />
    }
    <dl>
        @foreach (var item in Items)
        {
            var (key, value, memberInfo) = item;
            <dt>@key</dt>
            <dd>
            <TvElementView
              Parent="@this"
              Data="value"
              MemberInfo="memberInfo"
              Options="Options"
              Depth="Depth + 1"
              OpenDepth="OpenDepth"
            />
            </dd>
        }
    </dl>
    </MudPaper>
    #endregion
}

<style>

    dl {
        display: grid;
        grid-template-columns: max-content auto; /* dt 항목의 너비를 내용에 맞추고, dd 항목은 남은 공간을 차지하도록 설정 */
        /* gap: 1.2em; /* dt와 dd 항목 사이의 간격 */ 
        grid-row-gap: 1em; /* dt와 dd 항목 사이의 간격 */
        grid-column-gap: 2.2em;
    }

    dt {
        grid-column: 1; /* dt 항목은 첫 번째 열에 위치 */
        font-weight: bolder;
        font-size: 1.2em;
    }

    dd {
        grid-column: 2; /* dd 항목은 두 번째 열에 위치 */
        font-size: 1.2em;
    }

</style>
@inherits TvViewBase

  @if (Open ?? false)
  {
    List<string> tableClassList = new()
    {
      "d-inline-block",
      "align-self-start",
      (Options.Style.SuperDense ? "mud-table-super-dense" : string.Empty),
    };
    if (Depth == 1)
    {
      // tableClassList.AddRange(Options.Style.RootClass);
    }
    var tableClassText = string.Join(" ", tableClassList.Where(x => !string.IsNullOrWhiteSpace(x)));

    List<string> tdthClassList = new()
    {
      (Options.Style.SuperDense ? "px-2 py-1" : string.Empty),
    };
    string tdthClassText = string.Join(" ", tdthClassList.Where(x => !string.IsNullOrWhiteSpace(x)));
<MudPaper Elevation="0" Class="@("d-flex flex-column " + string.Join(" ", Options.Style.RootClass))">
@if (Depth == 1 && !string.IsNullOrWhiteSpace(Options.Title))
{
  <MudText Class="@(Options.Style.TitleStyle.ClassStr)" Style="@(Options.Style.TitleStyle.StyleStr)">
    @Options.Title
  </MudText>
}
  <MudTable
    Items="@array"
    Class="@tableClassText"
    Dense="Options.Style.Dense"
    Hover="Options.Style.Hover"
    Striped="Options.Style.Striped"
    Bordered="Options.Style.Bordered"
    Loading="Loading"
    LoadingProgressColor="Options.Style.LoadingProgressColor"
    CustomHeader="true"
  >
    <HeaderContent>
      <MudTHeadRow>
        @if (Depth != 1 && Options.Style.VisibleInnerToolbar)
        {
        <MudTh colspan="@TableColumns" Class="@tdthClassText">
          <MudButton OnClick="ToggleOpen"
            Class="mud-button-super-dense"
            Variant="Variant.Text"
            Style="text-transform: none;"
          >
            (@array.Count() Items)
          </MudButton>
        </MudTh>
        }
      </MudTHeadRow>
      <MudTHeadRow>
        @foreach (var memberInfo in MemberInfos)
        {
          <MudTh Class="@(tdthClassText + Options.Style.ThStyle.ClassStr)" Style="@(Options.Style.ThStyle.StyleStr)">
            @memberInfo.Name
          </MudTh>
        }
        @if (HasAnyAction)
        {
          <MudTh Class="@(tdthClassText + Options.Style.ThStyle.ClassStr)" Style="@(Options.Style.ThStyle.StyleStr)">
              ...
          </MudTh>
        }
      </MudTHeadRow>
    </HeaderContent>
    <RowTemplate>
      @foreach (var memberInfo in MemberInfos)
      {
        var value = GetValue(context, memberInfo.Name);
        <MudTd Class="@tdthClassText">
          <TvElementView
            Parent="context"
            Data="value"
            MemberInfo="memberInfo"
            Options="Options"
            Depth="Depth + 1"
            OpenDepth="OpenDepth"
          />
        </MudTd>
      }

      @if (HasAnyAction)
      {
        <MudTd Class="@tdthClassText">
          @foreach (var action in (Options?.Actions ?? Enumerable.Empty<ITvAction>()))
          {
            <TvActionButton
              Options="Options"
              Depth="Depth"
              Item="context"
              Action="action"
            />
          }
          @foreach (var link in Options?.Links ?? Enumerable.Empty<ITvLink>())
          {
            <TvLinkButton
              Options="Options"
              Depth="Depth"
              Item="context"
              Link="link"
            />
          }
        </MudTd>
      }
    </RowTemplate>
    <LoadingContent>
      @Options.Contents.LoadingContent
    </LoadingContent>
    <NoRecordsContent>
      @Options.Contents.NoRecordsContent
    </NoRecordsContent>
  </MudTable>

</MudPaper>
  }
  else
  {
    string classText = string.Empty;
    if (Options.Style.SuperDense)
    {
      classText += " mud-button-super-dense";
    }
    else if (Options.Style.Dense)
    {
      classText += " mud-button-dense";
    }
    <MudButton OnClick="ToggleOpen"
      Class="@classText"
      Variant="Variant.Outlined"
      Size="Size.Small"
    >
        array (@array.Count() items)
    </MudButton>
  }

@inherits TvViewBase

<div class="table-object-array">
  @if (Open)
  {
    List<string> classList = new()
    {
      "d-inline-block",
      (Options.Style.SuperDense ? "mud-table-super-dense" : string.Empty),
    };
    if (Depth == 1)
    {
      classList.AddRange(Options.Style.RootClass);
    }
    var classText = string.Join(" ", classList.Where(x => !string.IsNullOrWhiteSpace(x)));
  <MudTable
    Class="@classText"
    Items="@array"
    Hover="true"
    Dense="Options.Style.Dense"
    Bordered="Options.Style.Bordered"
    CustomHeader="true"
  >
    <HeaderContent>
      <MudTHeadRow>
        <MudTh colspan="@TableColumns">
          @if (Depth == 1 && !string.IsNullOrWhiteSpace(Options.Title))
          {
            <span class="tv-title">
              @Options.Title
            </span>
          }
          <span>
            (@array.Count() items)
          </span>
        </MudTh>
      </MudTHeadRow>
      <MudTHeadRow>
        @foreach (var memberInfo in MemberInfos)
        {
          <MudTh>@memberInfo.Name</MudTh>
        }
        @if (HasAnyAction)
        {
          <MudTh>...</MudTh>
        }
      </MudTHeadRow>
    </HeaderContent>
    <RowTemplate>
      @foreach (var memberInfo in MemberInfos)
      {
        var value = GetValue(context, memberInfo.Name);
        <MudTd Class="value" Style="padding: 0;">
          <TvElementView
            Parent="context"
            Data="value"
            MemberInfo="memberInfo"
            Options="Options"
            Depth="Depth + 1"
            OpenDepth="OpenDepth"
          />
        </MudTd>
      }

      @if (HasAnyAction)
      {
        <MudTd Class="value">
          @foreach (var action in (Options?.Actions ?? Enumerable.Empty<ITvAction>()))
          {
            <TvActionButton
              Options="Options"
              Depth="Depth"
              Item="context"
              Action="action"
            />
          }
        </MudTd>
      }

    </RowTemplate>
  </MudTable>
  <MudSimpleTable
    Class="@classText"
    Dense="Options.Style.Dense"
    Hover="Options.Style.Hover"
    Striped="Options.Style.Striped"
    Bordered="Options.Style.Bordered"
  >
      <thead>
        <tr>
          <th class="tv-title-counter" colspan="@TableColumns" @onclick="ToggleOpen">
            @if (Depth == 1 && !string.IsNullOrWhiteSpace(Options.Title))
            {
            <span class="tv-title">
              @Options.Title
            </span>
            }
            <span>
                (@array.Count() items)
            </span>
          </th>
        </tr>
        <tr>
          @foreach (var memberInfo in MemberInfos)
          {
            <th class="tv-type-header">@memberInfo.Name</th>
          }
          @if (HasAnyAction)
          {
            <th class="tv-type-header">...</th>
          }
        </tr>
      </thead>
      <tbody>
        @foreach (var item in array)
        {
          <tr>
            @if (item == null)
            {
              <td colspan="@(MemberInfos.Count() + (HasAnyAction ? 1 : 0))">
                <TvNullView Options="Options" Depth="Depth + 1" />
              </td>
            }
            else
            {
              @foreach (var memberInfo in MemberInfos)
              {
                var value = GetValue(item, memberInfo.Name);
                <td class="value">
                  <TvElementView
                    Parent="item"
                    Data="value"
                    MemberInfo="memberInfo"
                    Options="Options"
                    Depth="Depth + 1"
                    OpenDepth="OpenDepth"
                  />
                </td>
              }

              @if (HasAnyAction)
              {
                  <td class="value">
                    @foreach (var action in (Options?.Actions ?? Enumerable.Empty<ITvAction>()))
                    {
                      <TvActionButton
                        Options="Options"
                        Depth="Depth"
                        Item="item"
                        Action="action"
                      />
                    }
                  </td>
              }
            }
          </tr>
        }
      </tbody>
    </MudSimpleTable>
  }
  else
  {
    string classText = string.Empty;
    if (Options.Style.SuperDense)
    {
      classText += " mud-button-super-dense";
    }
    else if (Options.Style.Dense)
    {
      classText += " mud-button-dense";
    }
    <MudButton OnClick="ToggleOpen"
      Class="@classText"
      Variant="Variant.Outlined"
      Size="Size.Small"
    >
        array (@array.Count() items)
    </MudButton>
  }
</div>
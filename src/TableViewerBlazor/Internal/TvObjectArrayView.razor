@inherits TvViewBase

<div class="table-object-array">
  @if (Open)
  {
  <MudSimpleTable
    Dense="Options.Styles.Dense"
    Hover="Options.Styles.Hover"
    Striped="Options.Styles.Striped"
    Bordered="Options.Styles.Bordered"
    Style="display: inline-block;"
  >
      <thead>
        <tr>
          <th class="tv-title-counter" colspan="@TableColumns" @onclick="ToggleOpen">
            <span>
                (@array.Count() items)
            </span>
          </th>
        </tr>
        <tr>
          @foreach (var key in Keys)
          {
            <th class="tv-type-header">@key</th>
          }
          @if (HasAnyAction)
          {
            <th class="tv-type-header">...</th>
          }
        </tr>
      </thead>
      <tbody>
        @foreach (var item in array)
        {
          <tr>
            @if (item == null)
            {
              <td colspan="@(Keys.Count() + 1)">
                <TvNullView Options="Options" Depth="Depth + 1" />
              </td>
            }
            else
            {
              @foreach (var key in Keys)
              {
                var value = GetValue(item, key);
                <td class="value">
                  <TvElementView
                    Parent="item"
                    Data="value"
                    Options="Options"
                    Depth="Depth + 1"
                  />
                </td>
              }

              @if (HasAnyAction)
              {
                  <td class="value">
                    @foreach (var action in (Options?.Actions ?? Enumerable.Empty<ITvAction>()))
                    {
                      @if (action.Condition(item, Depth))
                      {
                        <MudButton OnClick="@(() => ButtonAction(item, action))"
                          Variant="action.Style.Variant"
                          Size="action.Style.Size"
                          Color="action.Style.Color"
                          Style="@action.Style.Style"

                          StartIcon="@action.Style.StartIcon"
                          EndIcon="@action.Style.EndIcon"
                          IconSize="action.Style.IconSize"
                          IconColor="action.Style.IconColor"
                        >
                          @action.Label
                        </MudButton>
                      }
                    }
                  </td>
              }
            }
          </tr>
        }
      </tbody>
    </MudSimpleTable>
  }
  else
  {
    <MudButton OnClick="ToggleOpen" Variant="Variant.Outlined" Size="Size.Small">
        array (@array.Count() items)
    </MudButton>
  }
</div>
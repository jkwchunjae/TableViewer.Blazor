@inherits TeEditorBase

@switch (NumericDefaultValue)
{
  case sbyte:
    <TeNumericField
      TNumber="sbyte"
      Data="Data"
      DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
      Options="Options"
      Depth="Depth"
      Path="@Path"
      Label="@Label"
      NumericFieldOption="NumericFieldOption"
    />
    break;
  case byte:
    <TeNumericField
      TNumber="byte"
      Data="Data"
      DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
      Options="Options"
      Depth="Depth"
      Path="@Path"
      Label="@Label"
      NumericFieldOption="NumericFieldOption"
    />
    break;
  case short:
    <TeNumericField
      TNumber="short"
      Data="Data"
      DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
      Options="Options"
      Depth="Depth"
      Path="@Path"
      Label="@Label"
      NumericFieldOption="NumericFieldOption"
    />
    break;
  case ushort:
    <TeNumericField
      TNumber="ushort"
      Data="Data"
      DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
      Options="Options"
      Depth="Depth"
      Path="@Path"
      Label="@Label"
      NumericFieldOption="NumericFieldOption"
    />
    break;
  case int:
    <TeNumericField
      TNumber="int"
      Data="Data"
      DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
      Options="Options"
      Depth="Depth"
      Path="@Path"
      Label="@Label"
      NumericFieldOption="NumericFieldOption"
    />
    break;
  case uint:
    <TeNumericField
      TNumber="uint"
      Data="Data"
      DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
      Options="Options"
      Depth="Depth"
      Path="@Path"
      Label="@Label"
      NumericFieldOption="NumericFieldOption"
    />
    break;
  case long:
    <TeNumericField
      TNumber="long"
      Data="Data"
      DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
      Options="Options"
      Depth="Depth"
      Path="@Path"
      Label="@Label"
      NumericFieldOption="NumericFieldOption"
    />
    break;
  case ulong:
    <TeNumericField
      TNumber="ulong"
      Data="Data"
      DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
      Options="Options"
      Depth="Depth"
      Path="@Path"
      Label="@Label"
      NumericFieldOption="NumericFieldOption"
    />
    break;
  case nint:
    <TeNumericField
      TNumber="nint"
      Data="Data"
      DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
      Options="Options"
      Depth="Depth"
      Path="@Path"
      Label="@Label"
      NumericFieldOption="NumericFieldOption"
    />
    break;
  case nuint:
    <TeNumericField
      TNumber="nuint"
      Data="Data"
      DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
      Options="Options"
      Depth="Depth"
      Path="@Path"
      Label="@Label"
      NumericFieldOption="NumericFieldOption"
    />
    break;
  case float:
    <TeNumericField
      TNumber="float"
      Data="Data"
      DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
      Options="Options"
      Depth="Depth"
      Path="@Path"
      Label="@Label"
      NumericFieldOption="NumericFieldOption"
    />
    break;
  case double:
    <TeNumericField
      TNumber="double"
      Data="Data"
      DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
      Options="Options"
      Depth="Depth"
      Path="@Path"
      Label="@Label"
      NumericFieldOption="NumericFieldOption"
    />
    break;
  case decimal:
    <TeNumericField
      TNumber="decimal"
      Data="Data"
      DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
      Options="Options"
      Depth="Depth"
      Path="@Path"
      Label="@Label"
      NumericFieldOption="NumericFieldOption"
    />
    break;
}


@inherits TeEditorBase

<MudSelect
    T="object"
    Value="Data"
    ValueChanged="@(async value => await OnValueChanged(value))"
    Label="@Label"

    Class="@SelectBoxOption.Property.Class"
    Style="@SelectBoxOption.Property.Style"
    Tag="@SelectBoxOption.Property.Tag"
    UserAttributes="@SelectBoxOption.Property.UserAttributes"
    Required="@SelectBoxOption.Property.Required"
    RequiredError="@SelectBoxOption.Property.RequiredError"
    ErrorId="@SelectBoxOption.Property.ErrorId"
    Culture="@SelectBoxOption.Property.Culture"
    Disabled="@SelectBoxOption.Property.Disabled"
    ReadOnly="@SelectBoxOption.Property.ReadOnly"
    FullWidth="@SelectBoxOption.Property.FullWidth"
    Immediate="@SelectBoxOption.Property.Immediate"
    Underline="@SelectBoxOption.Property.Underline"
    HelperId="@SelectBoxOption.Property.HelperId"
    HelperText="@SelectBoxOption.Property.HelperText"
    HelperTextOnFocus="@SelectBoxOption.Property.HelperTextOnFocus"
    OnlyValidateIfDirty="@SelectBoxOption.Property.OnlyValidateIfDirty"
    AdornmentColor="@SelectBoxOption.Property.AdornmentColor"
    AdornmentAriaLabel="@SelectBoxOption.Property.AdornmentAriaLabel"
    IconSize="@SelectBoxOption.Property.IconSize"
    Variant="@SelectBoxOption.Property.Variant"
    Margin="@SelectBoxOption.Property.Margin"
    Typo="@SelectBoxOption.Property.Typo"
    Placeholder="@SelectBoxOption.Property.Placeholder"
    Counter="@SelectBoxOption.Property.Counter"
    MaxLength="@SelectBoxOption.Property.MaxLength"
    AutoFocus="@SelectBoxOption.Property.AutoFocus"
    Lines="@SelectBoxOption.Property.Lines"
    InputMode="@SelectBoxOption.Property.InputMode"
    Pattern="@SelectBoxOption.Property.Pattern"
    ShrinkLabel="@SelectBoxOption.Property.ShrinkLabel"
    Format="@SelectBoxOption.Property.Format"
    OuterClass="@SelectBoxOption.Property.OuterClass"
    InputClass="@SelectBoxOption.Property.InputClass"
    PopoverClass="@SelectBoxOption.Property.PopoverClass"
    ListClass="@SelectBoxOption.Property.ListClass"
    Dense="@SelectBoxOption.Property.Dense"
    OpenIcon="@SelectBoxOption.Property.OpenIcon"
    CloseIcon="@SelectBoxOption.Property.CloseIcon"
    SelectAll="@SelectBoxOption.Property.SelectAll"
    SelectAllText="@SelectBoxOption.Property.SelectAllText"
    MultiSelectionTextFunc="@(SelectBoxOption.Property.MultiSelectionTextFunc ?? (list => string.Join(SelectBoxOption.Property.Delimiter, list)))"
    Delimiter="@SelectBoxOption.Property.Delimiter"
    MaxHeight="@SelectBoxOption.Property.MaxHeight"
    AnchorOrigin="@SelectBoxOption.Property.AnchorOrigin"
    TransformOrigin="@SelectBoxOption.Property.TransformOrigin"
    Strict="@SelectBoxOption.Property.Strict"
    Clearable="@SelectBoxOption.Property.Clearable"
    ClearIcon="@SelectBoxOption.Property.ClearIcon"
    LockScroll="@SelectBoxOption.Property.LockScroll"
    CheckedIcon="@SelectBoxOption.Property.CheckedIcon"
    UncheckedIcon="@SelectBoxOption.Property.UncheckedIcon"
    IndeterminateIcon="@SelectBoxOption.Property.IndeterminateIcon"
>
    @foreach (var item in SelectBoxOption.Items)
    {
        <MudSelectItem Value="@item.Value">@item.Text</MudSelectItem>
    }
</MudSelect>

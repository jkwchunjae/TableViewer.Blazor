@inherits TeEditorBase

@if (Options.IsIgnored(MemberInfo, this))
{
}
else if (Options.TryGetFieldOption(MemberInfo, this, out var fieldOption))
{
    if (fieldOption is ITeTextFieldOption textFieldOption)
    {
        <TeTextField
            Data="Data"
            DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
            Options="Options"
            Depth="Depth"
            Path="@Path"
            Label="@Label"
            TextFieldOption="textFieldOption"
        />
    }
    else if (fieldOption is ITeNumericFieldOption numericFieldOption)
    {
        <TeNumericFieldSwitch
            Data="Data"
            NumericDefaultValue="numericFieldOption.DefaultValue"
            DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
            Options="Options"
            Depth="Depth"
            Path="@Path"
            Label="@Label"
            NumericFieldOption="numericFieldOption"
        />
    }
    else if (fieldOption is ITeSelectBoxOption selectBoxOption)
    {
        <TeSelectBox
            Data="Data"
            DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
            Options="Options"
            Depth="Depth"
            Path="@Path"
            Label="@Label"
            SelectBoxOption="@selectBoxOption"
        />
    }
    else if (fieldOption is ITeRadioOption radioOption)
    {
        <TeRadio
            Data="Data"
            DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
            Options="Options"
            Depth="Depth"
            Path="@Path"
            Label="@Label"
            RadioOption="@radioOption"
        />
    }
    else if (fieldOption is ITeCheckBoxOption checkBoxOption)
    {
        <TeCheckBox
            Data="Data"
            DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
            Options="Options"
            Depth="Depth"
            Path="@Path"
            Label="@Label"
            Parent="Parent"
            CheckBoxOption="checkBoxOption"
        />
    }
    else if (fieldOption is ITeListEditorOption listEditorOption)
    {
        <TeListEditor
            Data="Data"
            DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
            Options="Options"
            ListEditorOption="listEditorOption"
            Depth="Depth"
            Path="@Path"
            Label="@Label"
        />
    }
    else if (fieldOption is TeObjectListEditorOption objectListEditorOption)
    {
        <TeObjectListEditor
            Data="Data"
            DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
            Options="Options"
            ObjectListOption="objectListEditorOption"
            Depth="Depth"
            Path="@Path"
            Label="@Label"
        />
    }
}
else
{
    <TeObjectEditor
        Data="Data"
        DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
        Options="Options"
        Depth="Depth"
        Path="@Path"
        Label="@Label"
    />
}

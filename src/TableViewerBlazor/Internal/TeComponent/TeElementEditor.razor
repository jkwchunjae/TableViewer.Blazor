@inherits TeEditorBase

@if (Options.TryGetIgnoreOption(MemberInfo, this, out var ignoreOption))
{
}
else if (Options.TryGetSelectBoxOption(MemberInfo, this, out var selectBoxOption))
{
    <TeSelectBox
        Data="Data"
        DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
        Options="Options"
        Depth="Depth"
        Path="@Path"
        Label="@Label"
        SelectBoxOption="@selectBoxOption"
    />
}
else if (Options.TryGetRadioOption(MemberInfo, this, out var radioOption))
{
    <TeRadio
        Data="Data"
        DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
        Options="Options"
        Depth="Depth"
        Path="@Path"
        Label="@Label"
        RadioOption="@radioOption"
    />
}
else if (Options.TryGetNumericFieldOption(MemberInfo, this, out var numericFieldOption))
{
    <TeNumericField
        Data="Data"
        DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
        Options="Options"
        Depth="Depth"
        Path="@Path"
        Label="@Label"
        NumericFieldOption="numericFieldOption"
    />
}
else if (Options.TryGetImageUploaderOption(MemberInfo, this, out var imageUploaderOption))
{
    <TeImageUploader
        Data="Data"
        DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
        Options="Options"
        Depth="Depth"
        Path="@Path"
        Label="@Label"
        ImageUploaderOption="imageUploaderOption"
    />
}
else if (Options.TryGetTextFieldOption(MemberInfo, this, out var textFieldOption))
{
    <TeTextField
        Data="Data"
        DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
        Options="Options"
        Depth="Depth"
        Path="@Path"
        Label="@Label"
        TextFieldOption="textFieldOption"
    />
}
else if (Data is DateTime)
{

}
else if (Data is Array || Data is IEnumerable)
{

}
else if (Data is Enum)
{
    <TeEnumEditor
        Data="Data"
        DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
        Options="Options"
        Depth="Depth"
        Path="@Path"
        Label="@Label"
    />
}
else
{
    <TeObjectEditor
        Data="Data"
        DataChanged="@(async value => await DataChanged.InvokeAsync(value))"
        Options="Options"
        Depth="Depth"
        Path="@Path"
        Label="@Label"
    />
}
